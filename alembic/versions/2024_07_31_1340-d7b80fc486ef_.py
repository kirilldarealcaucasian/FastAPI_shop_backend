"""empty message

Revision ID: d7b80fc486ef
Revises: 
Create Date: 2024-07-31 13:40:04.483531

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd7b80fc486ef'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('isbn', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('price_per_unit', sa.Double(), nullable=False),
    sa.Column('price_with_discount', sa.Double(), sa.Computed('price_per_unit - (price_per_unit * (discount*0.01))', ), nullable=False),
    sa.Column('number_in_stock', sa.BIGINT(), nullable=False),
    sa.Column('genre_name', sa.String(), nullable=False),
    sa.Column('rating', sa.Double(), nullable=True),
    sa.Column('discount', sa.BIGINT(), nullable=True),
    sa.PrimaryKeyConstraint('id', 'isbn'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('isbn')
    )
    op.create_table('users',
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('gender', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('registration_date', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('role_name', sa.String(), server_default='user', nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('authors',
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('book_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('images',
    sa.Column('book_id', sa.UUID(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('order_status', sa.String(), server_default='pending', nullable=True),
    sa.Column('order_date', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('total_sum', sa.Double(), nullable=True),
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('publishers',
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('book_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bookorderassocs',
    sa.Column('order_id', sa.BIGINT(), nullable=False),
    sa.Column('book_id', sa.UUID(), nullable=False),
    sa.Column('count_ordered', sa.BIGINT(), server_default='1', nullable=False),
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_id', 'book_id', name='idx_unique_book_order_key')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bookorderassocs')
    op.drop_table('publishers')
    op.drop_table('orders')
    op.drop_table('images')
    op.drop_table('authors')
    op.drop_table('users')
    op.drop_table('books')
    # ### end Alembic commands ###
